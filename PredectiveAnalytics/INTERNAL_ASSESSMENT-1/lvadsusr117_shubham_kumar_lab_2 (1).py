# -*- coding: utf-8 -*-
"""LVADSUSR117 Shubham kumar LAB 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Mx5I3dLwiy2WP80zav_07QQbfJVSTkAo
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
df=pd.read_csv("/content/sample_data/booking.csv")

df.head()

df.isnull().sum()#no null values in the dataset

df.describe()

sns.boxplot(df)#outlier detection

def cap_data(df):
    for col in df.columns:
        print("capping the ",col)
        if (((df[col].dtype)=='float64') | ((df[col].dtype)=='int64')):
            percentiles = df[col].quantile([0.01,0.99]).values
            df[col][df[col] <= percentiles[0]] = percentiles[0]
            df[col][df[col] >= percentiles[1]] = percentiles[1]
        else:
            df[col]=df[col]
    return df

df=cap_data(df)#outlier removal

sns.boxplot(df) #no outliers now for better prediction

from sklearn.preprocessing import LabelEncoder
label_encoder = LabelEncoder()

df['room type_Encoded'] = label_encoder.fit_transform(df['room type'])
df['type of meal_Encoded'] = label_encoder.fit_transform(df['type of meal'])
df['booking status_Encoded'] = label_encoder.fit_transform(df['booking status'])
df['market segment type_Encoded'] = label_encoder.fit_transform(df['market segment type'])

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25, random_state=10)

from sklearn.tree import DecisionTreeClassifier
clf = DecisionTreeClassifier(random_state=0, criterion='entropy')

clf.fit(X_train,y_train)

from sklearn.metrics import accuracy_score
redictions_test=clf.predict(X_test)
accuracy_score(y_test, predictions_test)

y_pred= clf.predict(X_test)

y_pred

from sklearn.metrics import confusion_matrix
cm= confusion_matrix(y_test, y_pred)
cm

X_test
y_train

from sklearn.preprocessing import StandardScaler
st_x= StandardScaler()
X_train= st_x.fit_transform(X_train)
X_test= st_x.transform(X_test)